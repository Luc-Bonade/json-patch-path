/*
 * Copyright (c) 2014, Francis Galiegue (fgaliegue@gmail.com)
 *
 * This software is dual-licensed under:
 *
 * - the Lesser General Public License (LGPL) version 3.0 or, at your option, any
 *   later version;
 * - the Apache Software License (ASL) version 2.0.
 *
 * The text of this file and of both licenses is available at the root of this
 * project or, if you have the jar distribution, in directory META-INF/, under
 * the names LGPL-3.0.txt and ASL-2.0.txt respectively.
 *
 * Direct link to the sources:
 *
 * - LGPL 3.0: https://www.gnu.org/licenses/lgpl-3.0.txt
 * - ASL 2.0: http://www.apache.org/licenses/LICENSE-2.0.txt
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:4.2.0'
        classpath 'org.owasp:dependency-check-gradle:8.2.1'
    }
};

plugins {
    id("net.ltgt.errorprone") version "3.0.1" apply false
    id "org.sonarqube" version "4.2.1.3168"
    id "jacoco"
}

apply(plugin: "java-library");
apply(plugin: "maven-publish");
apply(plugin: "signing");
apply(plugin: "biz.aQute.bnd.builder");
apply(plugin: "net.ltgt.errorprone");
apply(plugin: 'org.owasp.dependencycheck');
apply(plugin: 'java-library')
apply(from: "project.gradle");

group = "com.gravity9";

/*
 * Repositories to use
 */
repositories {
    mavenCentral();
}

/*
 * Add errorprone checking.
 */
dependencies {
    errorprone('com.google.errorprone:error_prone_core:2.20.0')
}

/*
 * Necessary! Otherwise TestNG will not be used...
 *
 */
test {
    useTestNG() {
        useDefaultListeners = true;
    };
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

/*
 * Necessary to generate the source and javadoc jars
 */
task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource;
    archiveClassifier.set("sources");
}

/*
 * Lint all the things!
 */
allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:all" << "-Xlint:-serial" << "-Werror"
        }
        tasks.withType(Javadoc) {
            options.addStringOption('Xwerror', '-quiet')
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir;
    archiveClassifier.set("javadoc");
}

artifacts {
    archives jar;
    archives sourcesJar;
    archives javadocJar;
}

jacocoTestReport{
    reports {
        xml.enabled true
        html.enabled true
    }
}

wrapper {
    gradleVersion = "7.6.1";
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip";
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'json-patch-path'
            from components.java
            pom {
                name = 'json-patch-path'
                description = 'JSON Patch (RFC 6902) and JSON Merge Patch (RFC 7386) implementation in Java, using extended TMF620 JsonPath syntax'
                url = 'https://github.com/gravity9-tech/json-patch'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'Piotr-Dytkowski'
                        name = 'Piotr Dytkowski'
                        email = 'piotr.dytkowski@gravity9.com'
                        organization = 'gravity9'
                        organizationUrl = 'https://www.gravity9.com/'
                    }
                    developer {
                        id = 'Bartlomiej-Styczynski'
                        name = 'Bartlomiej Styczynski'
                        email = 'bartlomiej.styczynski@gravity9.com'
                        organization = 'gravity9'
                        organizationUrl = 'https://www.gravity9.com/'
                    }
                    developer {
                        id = 'Piotr-Bugara'
                        name = 'Piotr Bugara'
                        email = 'piotr.bugara@gravity9.com'
                        organization = 'gravity9'
                        organizationUrl = 'https://www.gravity9.com/'
                    }
                    developer {
                        id = 'Garry-Newball'
                        name = 'Garry Newball'
                        email = 'garry.newball@gravity9.com'
                        organization = 'gravity9'
                        organizationUrl = 'https://www.gravity9.com/'
                    }
                    developer {
                        id = 'Mateusz-Zaremba'
                        name = 'Mateusz Zaremba'
                        email = 'mateusz.zaremba@gravity9.com'
                        organization = 'gravity9'
                        organizationUrl = 'https://www.gravity9.com/'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/java-json-tools/json-patch.git'
                    developerConnection = 'scm:git:ssh://github.com:java-json-tools/json-patch.git'
                    url = 'https://github.com/gravity9-tech/json-patch'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}